(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[405],{2777:function(t,e,n){"use strict";n.r(e),n.d(e,{default:function(){return g}});var i=n(5893),r=n(7294),o=n(2212),a=n(5671),u=n(3144),s=n(4942),l=n(9667);function c(t,e){var n;if("undefined"===typeof Symbol||null==t[Symbol.iterator]){if(Array.isArray(t)||(n=function(t,e){if(!t)return;if("string"===typeof t)return f(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);"Object"===n&&t.constructor&&(n=t.constructor.name);if("Map"===n||"Set"===n)return Array.from(t);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return f(t,e)}(t))||e&&t&&"number"===typeof t.length){n&&(t=n);var i=0,r=function(){};return{s:r,n:function(){return i>=t.length?{done:!0}:{done:!1,value:t[i++]}},e:function(t){throw t},f:r}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,a=!0,u=!1;return{s:function(){n=t[Symbol.iterator]()},n:function(){var t=n.next();return a=t.done,t},e:function(t){u=!0,o=t},f:function(){try{a||null==n.return||n.return()}finally{if(u)throw o}}}}function f(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,i=new Array(e);n<e;n++)i[n]=t[n];return i}function m(t,e,n,i,r){var o=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];if(!0===o){if(t<e)return i;if(t>n)return r}return(t-e)*((r-i)/(n-e))+i}var h=function(){function t(e,n,i){(0,a.Z)(this,t),(0,s.Z)(this,"_BLOCK_NOISE_TEXTURE_SIZE",256),this.data=e,this.width=n,this.height=i,this.textures=[],this.textureIndex=0,this.numTextures=e.length,this.numTotalImgs=0,this.numLoadedImgs=0,this.blockNoiseCanvas=document.createElement("canvas"),this.blockNoiseCanvas.width=this._BLOCK_NOISE_TEXTURE_SIZE,this.blockNoiseCanvas.height=this._BLOCK_NOISE_TEXTURE_SIZE,this.blockNoiseCtx=this.blockNoiseCanvas.getContext("2d"),this.blockNoiseTexture=new o.xEZ(this.blockNoiseCanvas),this.blockNoiseTexture.minFilter=o.TyD,this.blockNoiseTexture.magFilter=o.TyD,this.blockNoiseTexture.wrapS=o.OoA,this.blockNoiseTexture.wrapT=o.OoA,this.blockNoiseCanvas.style.zIndex=1e3,this.blockNoiseCanvas.style.position="fixed",this.blockNoiseCanvas.style.top="0px",this.blockNoiseCanvas.style.left="0px";var r=new o._12(n,i);this.material=new o.FIo({vertexShader:"uniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\n\nattribute vec3 position;\nattribute vec2 uv;\n\nvarying vec2 vUv;\n\nvoid main() {\n  vUv = uv;\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n",fragmentShader:"#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\nuniform sampler2D img1;\nuniform sampler2D img2;\nuniform sampler2D blockNoiseTexture;\nuniform float time;\nuniform float timeOffset;\nuniform float glitchValue;\nuniform float imgRatio;\nuniform vec2 resolution;\nuniform vec3 randomValues;\n\nvarying vec2 vUv;\n\nfloat PI = 3.1415926535897932384626433832795;\n\nfloat map(float value, float inputMin, float inputMax, float outputMin, float outputMax, bool clamp) {\n    if(clamp == true) {\n      if(value < inputMin) return outputMin;\n      if(value > inputMax) return outputMax;\n    }\n\n    float p = (outputMax - outputMin) / (inputMax - inputMin);\n    return ((value - inputMin) * p) + outputMin;\n}\n\nconst int   oct  = 8;\nconst float per  = 0.5;\nconst float cCorners = 1.0 / 16.0;\nconst float cSides   = 1.0 / 8.0;\nconst float cCenter  = 1.0 / 4.0;\n\n// \u88dc\u9593\u95a2\u6570\nfloat interpolate(float a, float b, float x){\n    float f = (1.0 - cos(x * PI)) * 0.5;\n    return a * (1.0 - f) + b * f;\n}\n\n// \u4e71\u6570\u751f\u6210\nfloat rnd(vec2 p){\n    return fract(sin(dot(p ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\n// \u88dc\u9593\u4e71\u6570\nfloat irnd(vec2 p){\n    vec2 i = floor(p);\n    vec2 f = fract(p);\n    vec4 v = vec4(rnd(vec2(i.x,       i.y      )),\n                rnd(vec2(i.x + 1.0, i.y      )),\n                rnd(vec2(i.x,       i.y + 1.0)),\n                rnd(vec2(i.x + 1.0, i.y + 1.0)));\n    return interpolate(interpolate(v.x, v.y, f.x), interpolate(v.z, v.w, f.x), f.y);\n}\n\n// \u30ce\u30a4\u30ba\u751f\u6210\nfloat noise(vec2 p){\n    float t = 0.0;\n    for(int i = 0; i < oct; i++){\n        float freq = pow(2.0, float(i));\n        float amp  = pow(per, float(oct - i));\n        t += irnd(vec2(p.x / freq, p.y / freq)) * amp;\n    }\n    return t;\n}\n\nvoid main(){\n    vec2 uv = vUv;\n\n    float posY = floor(mod(-time * 0.02, resolution.y));\n    float subY = posY - uv.t * resolution.y;\n    if(subY > -0.45 && subY < 0.45) {\n        uv.x += 0.02 * randomValues.x;\n    }\n\n    posY = floor(mod(-time * 0.03, resolution.y));\n    subY = posY - uv.t * resolution.y;\n    if(subY > -0.25 && subY < 0.25) {\n        uv.x += 0.02 * randomValues.z;\n    }\n\n    float r = mod(time, 10.0) * 100000.0 * uv.y;\n    uv.x += map(noise(vec2(randomValues.y * r, randomValues.x * r)), 0.0, 1.0, -1.0, 1.0, true) * 0.1 * glitchValue;\n    uv.y += map(noise(vec2(randomValues.x * r, randomValues.z * r)), 0.0, 1.0, -1.0, 1.0, true) * 0.1 * glitchValue;\n\n    vec4 blockNoise = texture2D(blockNoiseTexture, vUv);\n    uv.x += blockNoise.r * glitchValue * 0.3;\n    uv.y += blockNoise.g * glitchValue * 0.3;\n\n    vec4 color1 = texture2D(img1, uv);\n    vec4 color2 = texture2D(img2, uv);\n    vec4 color = mix(color1, color2, imgRatio);\n    if(color.a == 0.0) {\n        discard;\n    } else {\n        gl_FragColor = color;\n    }\n}\n",depthTest:!1,depthWrite:!1,transparent:!0,uniforms:{time:{type:"1f",value:0},timeOffset:{type:"1f",value:1e3*Math.random()},img1:{type:"t",value:null},img2:{type:"t",value:null},resolution:{type:"2f",value:new o.FM8(n,i)},blockNoiseTexture:{type:"t",value:this.blockNoiseTexture},randomValues:{type:"3f",value:new o.Pa4},glitchValue:{type:"1f",value:0},imgRatio:{type:"1f",value:0}}}),this.mesh=new o.Kj0(r,this.material),this.swapTexturesTimeline=null,this.glitchTimer=null}return(0,u.Z)(t,[{key:"init",value:function(){var t,e=this,n=[],i=c(this.data);try{for(i.s();!(t=i.n()).done;){var r=t.value;n.push(this.loadTexture(r.imgPath))}}catch(o){i.e(o)}finally{i.f()}return Promise.all(n).then((function(){return e.setImgs(),!0}))}},{key:"loadTexture",value:function(t){var e=this;this.numTotalImgs++;var n=new o.dpR;return new Promise((function(i){var r=n.load(t,(function(){e.numLoadedImgs++,i()}));r.wrapS=o.rpg,r.wrapT=o.rpg,r.minFilter=o.wem,r.maxFilter=o.wem,r.wrapS=o.OoA,r.wrapT=o.OoA,e.textures.push(r)}))}},{key:"setImgs",value:function(){this.material.uniforms.img1.value=this.textures[this.textureIndex],this.textureIndex=++this.textureIndex%this.numTextures,this.material.uniforms.img2.value=this.textures[this.textureIndex],this.material.needUpdate=!0}},{key:"update",value:function(t){this.material.uniforms.time.value=t,this.material.uniforms.randomValues.value.set(m(Math.random(),0,1,-1,1),m(Math.random(),0,1,-1,1),m(Math.random(),0,1,-1,1)),this.material.needsUpdate=!0}},{key:"start",value:function(){this.setGlitchTimer()}},{key:"setGlitchTimer",value:function(){var t=this;this.clearGlitchTimer(),this.glitchTimer=setTimeout((function(){return t.swapTextures()}),5e3)}},{key:"clearGlitchTimer",value:function(){this.glitchTimer&&clearTimeout(this.glitchTimer),this.glitchTimer=null}},{key:"swapTextures",value:function(){var t=this;this.swapTexturesTimeline&&this.swapTexturesTimeline.kill(),this.material.uniforms.glitchValue.value=1,this.swapTexturesTimeline=l.p8.timeline().to(this.material.uniforms.imgRatio,.2,{value:1,ease:"Expo.easeInOut"},.2).add((function(){return t.updateBlockNoise()}),.05).add((function(){return t.updateBlockNoise()}),.1).add((function(){return t.updateBlockNoise()}),.15).add((function(){return t.updateBlockNoise()}),.2).add((function(){return t.updateBlockNoise()}),.25).add((function(){return t.updateBlockNoise()}),.3).add((function(){return t.updateBlockNoise()}),.35).add((function(){t.material.uniforms.glitchValue.value=0,t.material.uniforms.imgRatio.value=0,t.setImgs(),t.setGlitchTimer()}),.4)}},{key:"updateBlockNoise",value:function(){this.blockNoiseCtx.clearRect(0,0,this._BLOCK_NOISE_TEXTURE_SIZE,this._BLOCK_NOISE_TEXTURE_SIZE);for(var t=0;t<4+4*Math.floor(Math.random());t++){var e=Math.random(),n=Math.random(),i=Math.random()*this._BLOCK_NOISE_TEXTURE_SIZE,r=Math.random()*this._BLOCK_NOISE_TEXTURE_SIZE,o=(.1+.1*Math.random())*this._BLOCK_NOISE_TEXTURE_SIZE,a=(.04+.04*Math.random())*this._BLOCK_NOISE_TEXTURE_SIZE;this.blockNoiseCtx.fillStyle="rgba(".concat(Math.floor(256*e),", ").concat(Math.floor(256*n),", 0, 1)"),this.blockNoiseCtx.fillRect(i-o/2,r-a/2,o,a)}this.blockNoiseTexture.needsUpdate=!0,this.material.needUpdate=!0}}]),t}();function v(t,e){var n;if("undefined"===typeof Symbol||null==t[Symbol.iterator]){if(Array.isArray(t)||(n=function(t,e){if(!t)return;if("string"===typeof t)return d(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);"Object"===n&&t.constructor&&(n=t.constructor.name);if("Map"===n||"Set"===n)return Array.from(t);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return d(t,e)}(t))||e&&t&&"number"===typeof t.length){n&&(t=n);var i=0,r=function(){};return{s:r,n:function(){return i>=t.length?{done:!0}:{done:!1,value:t[i++]}},e:function(t){throw t},f:r}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,a=!0,u=!1;return{s:function(){n=t[Symbol.iterator]()},n:function(){var t=n.next();return a=t.done,t},e:function(t){u=!0,o=t},f:function(){try{a||null==n.return||n.return()}finally{if(u)throw o}}}}function d(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,i=new Array(e);n<e;n++)i[n]=t[n];return i}var p=function(t){var e=t.images,n=(0,r.useRef)(null),a=(0,r.useRef)(null),u=void 0,s=void 0,l=void 0,c=void 0,f=void 0,m=void 0,d={width:void 0,height:void 0},p=void 0,g=function(){d.width=n.current.offsetWidth,d.height=n.current.offsetHeight,c.setSize(d.width,d.height),m.aspect=d.width/d.height,m.updateProjectionMatrix()},x=function t(){u=requestAnimationFrame(t),l=(new Date).getTime()-s,p.update(l),c.render(f,m)},y=function(){c=new o.CP7({canvas:a.current,alpha:!0,antialias:!1});var t=Math.min(2,window.devicePixelRatio||1);c.setPixelRatio(t),f=new o.xsS,d.width=n.current.offsetWidth,d.height=n.current.offsetHeight,(m=new o.cPb(45,d.width/d.height,1,1e3)).position.z=100;var i,r=[],u=v(e);try{for(u.s();!(i=u.n()).done;){var l=i.value;r.push({imgPath:l})}}catch(y){u.e(y)}finally{u.f()}p=new h(r,40,40),f.add(p.mesh),window.addEventListener("resize",g),g(),p.init().then((function(){s=(new Date).getTime(),p.start(),x()}))},T=function(){u&&(cancelAnimationFrame(u),u=void 0),window.removeEventListener("resize",g)};return(0,r.useEffect)((function(){if(void 0!==a.current&&void 0!==n.current)return y(),T}),[n,a]),(0,i.jsx)("div",{className:"canvas-container",ref:n,children:(0,i.jsx)("canvas",{className:"glitch-canvas",ref:a})})};function g(){return(0,i.jsx)(i.Fragment,{children:(0,i.jsx)(p,{images:["/images/img01.png","/images/img02.png","/images/img03.png","/images/img04.png"]})})}},5301:function(t,e,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/",function(){return n(2777)}])}},function(t){t.O(0,[737,328,774,888,179],(function(){return e=5301,t(t.s=e);var e}));var e=t.O();_N_E=e}]);